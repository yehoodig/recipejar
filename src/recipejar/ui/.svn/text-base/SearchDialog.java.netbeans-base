/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchDialog.java
 *
 * Created on Nov 5, 2009, 9:14:53 PM
 */
package recipejar.ui;

import java.awt.Component;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.text.BadLocationException;
import javax.swing.text.Element;
import javax.swing.text.html.HTMLDocument;

/**
 *
 * @author james
 */
public class SearchDialog extends javax.swing.JDialog {


   /** Creates new form SearchDialog
    * @param parent
    * @param modal
    */
   public SearchDialog(RecipeJarFrame parent, boolean modal) {
      super(parent);
      initComponents();
      jTextField1.setText("");
      //results = new ArrayList<Identifier>();
      jList1.setEnabled(false);
      jList1.setCellRenderer(new ListRenderer());

   }

   private Element getListElement(HTMLDocument doc, String address) {
      javax.swing.text.Element e = doc.getElement("letter" + address.trim().toUpperCase().charAt(0));
      if (e != null) {
         javax.swing.text.Element f = e.getElement(1);//Default list
         if (f != null && f.getName().toLowerCase().equals("ul")) {
            return f;
         } else {
            return null;
         }
      } else {
         return null;
      }
   }

   private Element getAnchorElement(Element e, String name){
      for (int i = 0; i < e.getElementCount(); i++) {
         javax.swing.text.Element f = e.getElement(i);
         if (f.getName().toLowerCase().equals("li")) {
            try {
               if (f.getDocument().getText(f.getStartOffset(), f.getEndOffset()-f.getStartOffset()).trim().toLowerCase().startsWith(name.trim().toLowerCase())) {
                  return f;
               }
            } catch (BadLocationException ex) {
            }
         }
      }
      return null;
   }

   private class ListRenderer extends DefaultListCellRenderer {

      @Override
      public Component getListCellRendererComponent(JList list,
              Object value,
              int index, boolean isSelected,
              boolean cellHasFocus) {

         super.getListCellRendererComponent(list,
                 value,
                 index,
                 isSelected,
                 cellHasFocus);
//         if (((Identifier) value).isCategory) {
  //          setForeground(inLabels.getForeground());
    //        setFont(inLabels.getFont());
      //   }
         return this;
      }
   }

   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setTitle("Find");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSearch(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                shortcutHandler(evt);
            }
        });

        jButton1.setText("Go");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSearch(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                shortcutHandler(evt);
            }
        });

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                shortcutHandler(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onSearch(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSearch
//       results = index.search(jTextField1.getText(), inTitle.isSelected(),
  //             inLabels.isSelected(), inNotes.isSelected(),
    //           inIngredients.isSelected(), inProcedure.isSelected());
      // Collections.sort((List) results);
       DefaultListModel listModel = new DefaultListModel();
//       for (int i = 0; i < results.size(); i++) {
  //        listModel.addElement(results.get(i));
    //   }
       jList1.setModel(listModel);
       jList1.setEnabled(true);
    }//GEN-LAST:event_onSearch

    private void onClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onClicked
/*       if (evt.getClickCount() > 0 && evt.getClickCount() < 3) {
          //Select correct Tab, select item, and if it is a recipe,
          //open it.
          int selection = jList1.getSelectedIndex();
          if (selection != -1) {
             index.setSelectedIndex(results.get(selection).name.charAt(0));
             JTextPane p = index.getSelectedTextPane();
             HTMLDocument doc = (HTMLDocument) p.getDocument();
             //Most of the following is just to get it to scroll the the right place.
             if (results.get(selection).isCategory) {
                javax.swing.text.Element e = doc.getElement(IndexFile.underscoreSpaces(results.get(selection).name));
                if (e != null) {
                   p.setCaretPosition(e.getStartOffset());
                   try {
                      Rectangle r1 = p.modelToView(e.getStartOffset());
                      Rectangle whatIWant = new Rectangle(r1.x, r1.y, r1.width, p.getVisibleRect().height);
                      p.scrollRectToVisible(whatIWant);
                   } catch (BadLocationException ex) {
                   }
                }
             } else {
                javax.swing.text.Element e = getListElement(doc, results.get(selection).address);
                try {
                   if (e != null) {
                      javax.swing.text.Element f = getAnchorElement(e, results.get(selection).name);
                      if (f != null) {
                         p.setCaretPosition(f.getStartOffset());
                         Rectangle r1 = p.modelToView(f.getStartOffset());
                         Rectangle whatIWant = new Rectangle(r1.x, r1.y, r1.width, p.getVisibleRect().height);
                         p.scrollRectToVisible(whatIWant);
                      }
                   }
                } catch (BadLocationException badLocationException) {
                }
                opener.open(results.get(selection).address);
             }
          }

          if (evt.getClickCount() == 2) {//close dialog
             this.setVisible(false);
             this.dispose();
          }
       }*/
}//GEN-LAST:event_onClicked

    private void shortcutHandler(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_shortcutHandler
       if (recipejar.Util.isOS("mac")) {
          if (evt.isMetaDown()) {
             if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_W) {
                this.setVisible(false);
             }
          }
       }
    }//GEN-LAST:event_shortcutHandler

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
