/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package recipejar;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;
import javax.swing.JOptionPane;

/**
 *
 * @author James McConnel
 */
public class StateManager {

    File state;
    HashMap<String, String> values = new HashMap<String, String>();

    public StateManager(File st) throws FileNotFoundException, IOException {
        this.state = st;
        FileReader in = new FileReader(state);
        String s = new String();
        int c = in.read();
        while (c != -1) {
            s = s + (char) c;
            c = in.read();
        }
        while (!s.isEmpty()) {
            int x;
            values.put(s.substring(0, x = s.indexOf(":")), s.substring(x + 1, s.indexOf("\n")).trim());
            s = s.substring(s.indexOf("\n") + 1);
        }
    }

    /**
     *
     * @param key The name of the value to be returned
     * @return The value mapped to the given key or null, if there is none.
     */
    public String getValue(String key) {
        return values.get(key);
    }

    public void setValue(String key, String Value) {
        values.put(key, Value);
        save();
    }

    public void save() {
        FileWriter out = null;
        try {
            out = new FileWriter(state);
            for (Iterator<Entry<String, String>> i = values.entrySet().iterator(); i.hasNext();) {
                Entry<String, String> x = i.next();
                out.write(x.getKey());
                out.write(": ");
                out.write(x.getValue());
                out.write("\n");
            }
            out.close();
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Fatal Error.  See \"errorLog.txt\" for more information.");
            System.exit(1);
        } finally {
            try {
                out.close();
            } catch (IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Fatal Error.  See \"errorLog.txt\" for more information.");
                System.exit(1);
            }
        }

    }
}
