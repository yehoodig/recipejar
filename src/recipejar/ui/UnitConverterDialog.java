/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UnitConverterDialog.java
 *
 * Created on Oct 23, 2009, 9:37:36 AM
 */
package recipejar.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Set;
import recipejar.data.Ingredient;
import recipejar.data.Unit;

/**
 *
 * @author james
 */
public class UnitConverterDialog extends javax.swing.JDialog {

   private ArrayList<Unit> units;
   private ActionListener fromListnr = new ActionListener() {

      public void actionPerformed(ActionEvent e) {
         if (convertableUnts.getSelectedIndex() >= 0) {
            toUnts.removeActionListener(toListnr);
            toUnts.removeAllItems();
            toUnts.addItem("Convert To...");
            Set<String> keys = units.get(convertableUnts.getSelectedIndex()).getConversionUnitKeySet();
            for (Iterator<String> i = keys.iterator(); i.hasNext();) {
               toUnts.addItem(i.next());
            }
            toUnts.addActionListener(toListnr);
         }
      }
   };
   private ActionListener toListnr = new ActionListener() {

      public void actionPerformed(ActionEvent e) {
         if (!toUnts.getSelectedItem().toString().equals("Convert To...")) {
            /*if (quantity.getText().contains("+") || quantity.getText().contains("-")
                    || quantity.getText().contains("*") || quantity.getText().contains("/")
                    || quantity.getText().contains("(") || quantity.getText().contains(")")) {
               quantity.setText(decimalToFraction(Float.parseFloat(quantity.getText())));
            }*/
            quantity.setText(Ingredient.convert(quantity.getText(),
                    units.get(convertableUnts.getSelectedIndex()).getConversionFactor(toUnts.getSelectedItem().toString())));
            quantity.selectAll();
            toUnts.setSelectedIndex(0);
         }
      }
   };


   /** Creates new form UnitConverterDialog
    * @param parent
    * @param modal
    */
   public UnitConverterDialog(java.awt.Frame parent, boolean modal) {
      super(parent, modal);
      initComponents();
      units = new ArrayList<Unit>();

      this.convertableUnts.addActionListener(fromListnr);
      this.toUnts.addActionListener(toListnr);
      quantity.addActionListener(toListnr);
   }

   public void reloadUnits(ArrayList<Unit> u) {
      convertableUnts.removeActionListener(fromListnr);
      toUnts.removeActionListener(toListnr);
      convertableUnts.removeAllItems();
      toUnts.removeAllItems();
      toUnts.addItem("Convert To...");
      units = new ArrayList<Unit>();
      for (Iterator<Unit> i = u.iterator(); i.hasNext();) {
         Unit temp = i.next();
         if (temp.isConvertable()) {
            units.add(temp);
            convertableUnts.addItem(temp.getPlural());
         }
      }
      toUnts.removeAllItems();
      toUnts.addItem("Convert To...");
      Set<String> keys = units.get(convertableUnts.getSelectedIndex()).getConversionUnitKeySet();
      for (Iterator<String> i = keys.iterator(); i.hasNext();) {
         toUnts.addItem(i.next());
      }

      convertableUnts.addActionListener(fromListnr);
      toUnts.addActionListener(toListnr);
   }

   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        quantity = new javax.swing.JTextField();
        convertableUnts = new javax.swing.JComboBox();
        toUnts = new javax.swing.JComboBox();

        setTitle("Unit Converter");

        quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quantityKeyPressed(evt);
            }
        });

        convertableUnts.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Farenheit" }));
        convertableUnts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                convertableUntsKeyPressed(evt);
            }
        });

        toUnts.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Convert To--", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(quantity, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(convertableUnts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(toUnts, 0, 300, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(convertableUnts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toUnts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void convertableUntsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_convertableUntsKeyPressed
      shortcutHandler(evt);
   }//GEN-LAST:event_convertableUntsKeyPressed

   private void quantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityKeyPressed
      shortcutHandler(evt);
   }

   private void shortcutHandler(java.awt.event.KeyEvent evt) {
      if (recipejar.Util.isOS("mac")) {
         if (evt.isMetaDown()) {
            if (evt.getKeyCode() == KeyEvent.VK_W) {
               this.setVisible(false);
            }
         }
      }
   }//GEN-LAST:event_quantityKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox convertableUnts;
    private javax.swing.JTextField quantity;
    private javax.swing.JComboBox toUnts;
    // End of variables declaration//GEN-END:variables
}
